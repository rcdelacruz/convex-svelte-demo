# Examples of using environment variables in wrangler.toml
# This file shows different approaches to handle environment variables

name = "convex-svelte-demo-${ENVIRONMENT:-production}"
main = "./.svelte-kit/cloudflare/_worker.js"
assets = { directory = "./.svelte-kit/cloudflare", binding = "ASSETS" }
compatibility_date = "2024-09-23"
compatibility_flags = ["nodejs_compat"]
account_id = "${CLOUDFLARE_ACCOUNT_ID}"

[build]
command = "npm run build"

# Method 1: Direct environment variable substitution
[vars]
CONVEX_SELF_HOSTED_URL = "${CONVEX_SELF_HOSTED_URL}"
PUBLIC_CONVEX_URL = "${PUBLIC_CONVEX_URL}"
CONVEX_SELF_HOSTED_ADMIN_KEY = "${CONVEX_SELF_HOSTED_ADMIN_KEY}"
NODE_ENV = "${NODE_ENV:-development}"

# Method 2: Environment-specific variables with fallbacks
[env.staging.vars]
CONVEX_SELF_HOSTED_URL = "${STAGING_CONVEX_URL:-https://staging-convex.example.com}"
PUBLIC_CONVEX_URL = "${STAGING_CONVEX_URL:-https://staging-convex.example.com}"
CONVEX_SELF_HOSTED_ADMIN_KEY = "${STAGING_CONVEX_ADMIN_KEY}"
NODE_ENV = "staging"
DEBUG = "${DEBUG:-false}"

[env.production.vars]
CONVEX_SELF_HOSTED_URL = "${PROD_CONVEX_URL:-https://prod-convex.example.com}"
PUBLIC_CONVEX_URL = "${PROD_CONVEX_URL:-https://prod-convex.example.com}"
CONVEX_SELF_HOSTED_ADMIN_KEY = "${PROD_CONVEX_ADMIN_KEY}"
NODE_ENV = "production"
DEBUG = "false"

# Method 3: Using secrets (set via wrangler secret put)
# These are not visible in the config file but can be referenced
# Example: wrangler secret put CONVEX_ADMIN_KEY_SECRET

# Method 4: KV Namespaces with environment variables
# [[kv_namespaces]]
# binding = "MY_KV"
# id = "${KV_NAMESPACE_ID}"
# preview_id = "${KV_PREVIEW_ID}"

# Method 5: D1 Databases with environment variables
# [[d1_databases]]
# binding = "DB"
# database_name = "${D1_DATABASE_NAME}"
# database_id = "${D1_DATABASE_ID}"

# Method 6: R2 Buckets with environment variables
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "${R2_BUCKET_NAME}"

# Method 7: Environment-specific routes
# [env.staging]
# routes = [
#   { pattern = "${STAGING_DOMAIN:-staging.example.com}/*", zone_name = "${STAGING_ZONE:-example.com}" }
# ]

# [env.production]
# routes = [
#   { pattern = "${PROD_DOMAIN:-example.com}/*", zone_name = "${PROD_ZONE:-example.com}" }
# ]

# Method 8: Conditional configuration based on environment
# [env.development.vars]
# API_URL = "${DEV_API_URL:-http://localhost:3000}"
# LOG_LEVEL = "${LOG_LEVEL:-debug}"

# [env.production.vars]
# API_URL = "${PROD_API_URL:-https://api.example.com}"
# LOG_LEVEL = "${LOG_LEVEL:-error}"
